@page 
@model homework5_CV.Pages.AllCvModel
@{
}
<center><h1>All CVs'</h1></center>

@* <table class="table">
    <thead>
        <tr>
            <th>Id</th>
            <th>First Name</th>
            <th>Last Name</th>
            <th>Email</th>
            <th>BirthDay</th>
            <th>Nationality</th>
            <th>Sex</th>
            <th>Skills</th>
        </tr>
    </thead>
<tbody>
    @foreach (var cv in Model.CVList)
    {
        @await Html.PartialAsync("_CvSummary", cv)
    }
</tbody>
</table>

<hr />
<hr />
<hr />
<hr />
<hr /> *@
<table class="table">
    <thead>
        <tr>
            <th>Id</th>
            <th>First Name</th>
            <th>Last Name</th>
            <th>Email</th>
            <th>BirthDay</th>
            <th>Nationality</th>
            <th>Sex</th>
            <th>Skills</th>
            <th>Experience</th>
            <th>PDF CV</th>

        </tr>
     </thead>
     <tbody>
        @foreach (var cv in Model.CVList)
        {
            <tr>
                <td><p>@cv.Id</p></td>
                <td><p>@cv.Fname</p></td>

                <td><p>@cv.Lname</p></td>
                <td><p>@cv.Email</p></td>
                <td><p>@cv.BDay</p></td>
                <td><p>@cv.Nationality</p></td>
                <td><p>@cv.Sex</p></td>

                                    <td>
                                         @foreach (var skill in @cv.Skills)
                                        {
                                        @skill<span>,</span>
                                        }
                                   </td>
                <td><p>@cv.Experience</p></td>


                <td>
                    @if (!string.IsNullOrEmpty(cv.Pdfurl))
                    {
                        <a href="@cv.Pdfurl" target="_blank" class="btn btn-secondary">View PDF</a>
                    }
                    else
                    {
                        <span>No PDF</span>
                    }
                </td>


@*                 <td><p>@string.Join(", ", cv.Skills)</p></td>
 *@                <td>
                        @*<a asp-page="/CVPage" asp-route-id="@cv.Id" class="btn btn-primary">Edit</a> hyde eza bade e5eda aa CVPage
 *@                    @* asp-page="/CVPage" tells Razor to redirect to that Razor Page.
                    asp-route-id="@cv.Id" passes the CV's ID as a route parameter so it can be loaded for editing.

                Reason:	                                        Explanation:
                 GET is appropriate	                            Viewing/editing a form should use GET
                 Simple & clear	                                Using <a href> is cleaner than a form
                 Redirects to a form page	                    You can use a separate Razor Page (EditCv.cshtml) to edit the record
                 Good UX	                                    Users expect a new page with a form when editing*@

                    <a class="btn btn-primary" href="/EditCv?id=@cv.Id">Edit</a>

                </td>

                <td>
                    <form method="post" asp-page-handler="Delete" asp-route-id="@cv.Id" onsubmit="return confirm('Are you sure you want to delete this CV?');">
                        <button type="submit" class="btn btn-danger">Delete</button>
         @*                Feature	:                          Recommendation:
                            Delete action	                      Use <form method="post">with handler
                            Security	                          Use POST, never GET for deletes
                            User confirmation	                  Add onsubmit="return confirm(...)"
                            Button design	                      Use Bootstrap's btn btn-danger for red delete button *@
                    </form>
                </td>   

            </tr>

        }
     </tbody>
     </table>


<style>
    body {
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        background: linear-gradient(135deg, #f0f2f5, #d9e4f5);
        margin: 0;
        padding: 40px;
    }


    h1 {
        text-align: center;
        font-size: 32px;
        color: #333;
        margin-bottom: 30px;
        letter-spacing: 1px;
    }

    table.table {
        width: 95%;
        margin:  auto;
        border-collapse: collapse;
        border-spacing: 0;
        border-radius: 12px;
        background: rgba(255, 255, 255, 0.85);
        box-shadow: 0 8px 20px rgba(0, 0, 0, 0.08);
        overflow: hidden;
        backdrop-filter: blur(4px);
    }

    thead {
        background: rgba(0, 123, 255, 0.95);
        color: white;
    }

        thead th {
            padding: 14px;
            font-size: 15px;
            color: #fff;
            text-align: center;
        }

            thead th:last-child {
                border-right: none;
            }

    tbody td {
        padding: 12px;
        text-align: center;
        border-top: 1px solid #e2e8f0;
        font-size: 14px;
        color: #333;
    }

    tbody tr:hover {
        background-color: rgba(0, 123, 255, 0.05);
    }

    .btn {
        padding: 7px 14px;
        font-size: 13px;
        border-radius: 6px;
        text-decoration: none;
        transition: all 0.25s ease-in-out;
        cursor: pointer;
    }

    .btn-primary {
        background-color: #007bff;
        color: white;
        border: none;
    }

        .btn-primary:hover {
            background-color: #0056b3;
        }

    .btn-danger {
        background-color: #dc3545;
        color: white;
        border: none;
    }

        .btn-danger:hover {
            background-color: #a71d2a;
        }

    .btn-secondary {
        background-color: #6c757d;
        color: white;
        border: none;
    }

        .btn-secondary:hover {
            background-color: #545b62;
        }

    form {
        display: inline;
    }

    td p {
        margin: 0;
    }

    span {
        color: #999;
        font-style: italic;
    }
</style>

